# 工作流名称，会在 GitHub UI 中显示
name: Java CD with Maven

# 定义触发工作流的事件
on: 
  # 当推送到 main 分支时触发
  push:
    branches: [ main ]
  # 当创建针对 main 分支的拉取请求时触发
  pull_request:
    branches: [ main ]

# 定义工作流中的作业 (jobs)
jobs:
  # 一个名为 build 的作业
  build:
    # 指定作业运行的环境，这里使用最新版本的 Ubuntu
    runs-on: ubuntu-latest

    # 定义作业中的步骤
    steps:
    # 使用 actions/checkout 动作检出代码仓库
    - uses: actions/checkout@v4
    
    # 设置 Java 开发环境的步骤
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        # 指定要安装的 Java 版本
        java-version: '21'
        # 指定 Java 发行版
        distribution: 'temurin'
        # 启用 Maven 依赖缓存以提高后续构建速度
        cache: maven
        
    # 使用 Maven 构建项目的步骤
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    # 运行项目测试的步骤
    - name: Run tests
      run: mvn test
      
    # 部署应用的步骤（示例）
    - name: Deploy Application
      run: |
        echo "Building artifact..."
        mvn clean package
        echo "Deploying application..."
        # 这里可以添加具体的部署命令，例如：
        # - 部署到服务器
        # - 推送到 Docker registry
        # - 部署到云平台等
        echo "Application deployed successfully!"